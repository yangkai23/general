package employee_details_proj.service;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.TreeSet;

import employee_details_proj.dto.Employee;
import employee_details_proj.exceptions.InvalidDesignationException;

public class EmployeeService implements{
	private TreeSet<Employee> trainee=new TreeSet<>();
	private TreeSet<Employee> lead=new TreeSet<>();
	private TreeSet<Employee> manager=new TreeSet<>();
	
	public List<TreeSet<Employee>> groupEmployees(Employee employee){
		
		ArrayList<TreeSet<Employee>> list=new ArrayList<>();
		if(employee.getDesignation().equalsIgnoreCase("trainee")) 
			trainee.add(employee);
		else if(employee.getDesignation().equalsIgnoreCase("lead"))
			lead.add(employee);
		else if(employee.getDesignation().equalsIgnoreCase("manager"))
			manager.add(employee);
		else
			throw new InvalidDesignationException();
		list.add(manager);
		list.add(lead);
		list.add(trainee);
		return list;
	}

	private Comparator< Employee> com=(e1,e2)->{
		String dob[] = e1.getDob().split("-");
		String edob[] = e2.getDob().split("-");
		int day = Integer.parseInt(dob[0]);
		int eday = Integer.parseInt(edob[0]);
		int mon = Integer.parseInt(dob[1]);
		int emon = Integer.parseInt(edob[1]);
		int year = Integer.parseInt(dob[2]);
		int eyear = Integer.parseInt(edob[2]);
		if (year < eyear)
			return -1;
		else if (year >eyear)
			return 1;
		else {
			if (mon < emon)
				return -1;
			else if (mon>emon)
				return 1;
			else {
				if (day < eday)
					return 1;
				else if (eday < day)
					return -1;
				else
					return 0;
			}
		}
	};
	
}
