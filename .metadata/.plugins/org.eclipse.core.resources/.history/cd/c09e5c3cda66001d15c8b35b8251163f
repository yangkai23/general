package sorting;

import java.util.Arrays;
import java.util.Scanner;

public class RadixSort {
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int ar[] = new int[sc.nextInt()];
		for (int i = 0; i < ar.length; i++) {
			ar[i] = sc.nextInt();
		}
		radixSort(ar, 10, 4);
		System.out.println(Arrays.toString(ar));
		sc.close();
	}

	private static void radixSort(int[] ar, int radix, int width) {
		for (int i = 0; i < width; i++) {
			radixSingleSort(ar, i, radix);
		}

	}

	private static void radixSingleSort(int[] ar, int position, int radix) {
		int countArr[] = new int[radix];
		for (int value : ar) {
			countArr[getDigit(position, radix, value)]++;
		}
		for (int j = 1; j < radix; j++) {
			countArr[j] += countArr[j - 1];
		}
		int temp[] = new int[ar.length];
		for (int tempIndex = ar.length - 1; tempIndex >= 0; tempIndex--) {
			temp[--countArr[getDigit(position, radix, ar[tempIndex])]] = ar[tempIndex];
		}
		for (int i = 0; i < ar.length; i++) {
			ar[i] = temp[i];
		}
	}

	private static int getDigit(int position, int radix, int value) {
		return value / (int) Math.pow(radix, position) % radix;
	}

}
