package conceptual;

//import java.util.Arrays;

public class Student {
	static int arraySize;
	static Student students[];
	int studentId;
	String studentName;
	String email;
	long mobileNumber;
	double gpa;
	{
		arraySize++;
	}

	public Student(int studentId, String studentName, String email, long mobileNumber, double gpa) {
		this.studentId = studentId;
		this.studentName = studentName;
		this.email = email;
		this.mobileNumber = mobileNumber;
		if (gpa < 0)
			return;
		this.gpa = gpa;
	}

	public Student(int studentId, String studentName, double gpa) {
		this.studentId = studentId;
		this.studentName = studentName;
		if (gpa < 0)
			return;
		this.gpa = gpa;
	}

	public Student(int studentId, String studentName, double gpa, String email) {
		this.studentId = studentId;
		this.studentName = studentName;
		this.email = email;
		if (gpa < 0)
			return;
		this.gpa = gpa;
	}

	public Student(int studentId, String studentName, long mobileNumber, double gpa) {
		this.studentId = studentId;
		this.studentName = studentName;
		this.mobileNumber = mobileNumber;
		if (gpa < 0)
			return;
		this.gpa = gpa;
	}

	public Student() {
	}

	@Override
	public String toString() {
		String result = "\n" + "Student Details:\n-----------------------------------------------\n" + "Student ID : "
				+ this.studentId + "\n" + "Student Name : " + this.studentName + "\n" + "Student GPA : " + this.gpa
				+ "\n";
		if (email == null && this.mobileNumber == 0) {
			return result;
		} else if (email == null) {
			return result + "Student Mobile : " + this.mobileNumber + "\n";
		} else {
			return result + "Student Mobile : " + this.mobileNumber + "\n" + "Student  Email ID : " + this.email + "\n";
		}
	}

	public static void findTopperByGpa() {
		System.out.println("Top Scorer :");
		Student resultStudent = new Student();
		for (Student student : students) {
			Student temp = resultStudent;
			resultStudent = student.gpa > resultStudent.gpa ? student : temp;
		}
		System.out.println(resultStudent
				+ "*****************************************************************************************************\n");
	}

	public static void getFailedStudents() {
		System.out.println("Failed Students :");
		int count = 0;
		for (Student student : students) {
			if (student.gpa < 5) {
				System.out.println(student);
				count++;
			}
		}
		if (count == 0) {
			System.out.println(
					"No failures\n*****************************************************************************************************\n");
			return;
		}
		System.out.println(
				"*****************************************************************************************************\n");
	}

	public static void printStandings() {
		System.out.println("Class Standings");
		for (int i = 0; i < students.length; i++) {
			int max = i;
			for (int j = i + 1; j < students.length; j++) {
				if (students[j].gpa > students[max].gpa) {
					max = j;
				}
			}
			swapStudents(students, i, max);
		}
		for (int i = 0; i < students.length; i++) {
			System.out.println("Rank " + (i + 1) + " : \n" + "Student ID : " + students[i].studentId + "\n"
					+ "Student Name : " + students[i].studentName + "\nStudent GPA : " + students[i].gpa + "\n"
					+ "*****************************************************************************************************\n");
		}
	}

	/*
	 * public void printStudentDetails() { Arrays.stream(students).forEach(student
	 * -> System.out.println(student)); }
	 */

	public static void swapStudents(Student[] arr, int i, int j) {
		Student temp = students[i];
		students[i] = students[j];
		students[j] = temp;
	}

	public static void main(String[] args) {
		Student s1 = new Student(131, "Anirudh", "amirudhshanmukha2399@gmail.com", 9398538741L, 8.02);
		Student s2 = new Student(111, "Vishnu", 8.56);
		Student s3 = new Student(29, "Revanth", 9632587741L, 9.06);
		Student s4 = new Student(26, "Tarun", 7.24, "tarun@gmail.com");
		Student s5 = new Student(12, "Prahith", 8.44, "prahith@gmail.com");
		Student s6 = new Student(27, "Hrushi", 9.26);
		students = new Student[arraySize];
		students[0] = s1;
		students[1] = s2;
		students[2] = s3;
		students[3] = s4;
		students[4] = s5;
		students[5] = s6;
		findTopperByGpa();
		getFailedStudents();
		printStandings();
	}
}
